module mult_module #(parameter N=4) (
   input logic [N-1:0] a,        
	input logic [N-1:0] b,
	output logic [N-1:0] result,
	output logic neg_flag,
	output logic zr_flag,
	output logic cry_flag,
	output logic of_flag
);

	
	logic temp [2*N-1:0];
	
	assign temp = a * b;
	
	  
   always_comb begin
      if (temp > ((1 << N) - 1)) begin
         temp = temp - ((1 << N) - 1);
      end
		
		result = temp[N-1:0];
		
		neg_flag = result[N-1];
      zr_flag = (result == 0);
      cry_flag = (temp > ((1 << (2*N)) - 1));
      of_flag = ((a[N-1] == b[N-1]) && (result[N-1] != a[N-1]));
		
   end
	 

endmodule


